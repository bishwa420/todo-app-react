{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bishwa/Documents/Projects/react-projects/to-do-app/todo-app-react/to-do-app/src/component/ConditionalRendering.js\";\nimport React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport todoItemData from \"./todoItemData\";\n\nclass ConditionalRendering extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: todoItemData\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(id) {\n    console.log('handle change method called');\n    const updatedTodos = prevState.todos.map(todo => {\n      console.log('todo.id: ' + todo.id + ' id: ' + id);\n\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n        console.log('id: ' + id + ' completed: ' + todo.completed);\n      }\n\n      return todo;\n    });\n    this.setState({\n      todos: updatedTodos\n    }, () => console.log('state: ' + JSON.stringify(this.state.todos)));\n  }\n\n  render() {\n    const todoData = this.state.todos.map(d => /*#__PURE__*/_jsxDEV(TodoItem, {\n      data: d,\n      handleChange: this.handleChange\n    }, d.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 52\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: todoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ConditionalRendering;","map":{"version":3,"sources":["/Users/bishwa/Documents/Projects/react-projects/to-do-app/todo-app-react/to-do-app/src/component/ConditionalRendering.js"],"names":["React","Component","TodoItem","todoItemData","ConditionalRendering","constructor","state","todos","handleChange","bind","id","console","log","updatedTodos","prevState","map","todo","completed","setState","JSON","stringify","render","todoData","d"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA4C;AAExCI,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEJ;AADE,KAAb;AAGA,SAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,EAAD,EAAK;AAEbC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,UAAMC,YAAY,GAAGC,SAAS,CAACP,KAAV,CAAgBQ,GAAhB,CAAoBC,IAAI,IAAI;AAE7CL,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcI,IAAI,CAACN,EAAnB,GAAwB,OAAxB,GAAkCA,EAA9C;;AACA,UAAGM,IAAI,CAACN,EAAL,KAAYA,EAAf,EAAmB;AACfM,QAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,SAASF,EAAT,GAAc,cAAd,GAA+BM,IAAI,CAACC,SAAhD;AACH;;AACD,aAAOD,IAAP;AACH,KARoB,CAArB;AASA,SAAKE,QAAL,CAAc;AACVX,MAAAA,KAAK,EAAEM;AADG,KAAd,EAEG,MAAMF,OAAO,CAACC,GAAR,CAAY,YAAYO,IAAI,CAACC,SAAL,CAAe,KAAKd,KAAL,CAAWC,KAA1B,CAAxB,CAFT;AAGH;;AAGDc,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKhB,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqBQ,CAAC,iBAAI,QAAC,QAAD;AAEvC,MAAA,IAAI,EAAIA,CAF+B;AAGvC,MAAA,YAAY,EAAI,KAAKf;AAHkB,OAChCe,CAAC,CAACb,EAD8B;AAAA;AAAA;AAAA;AAAA,YAA1B,CAAjB;AAIA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKY;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtCuC;;AAyC5C,eAAelB,oBAAf","sourcesContent":["import React, {Component} from \"react\"\nimport TodoItem from \"./TodoItem\"\nimport todoItemData from \"./todoItemData\"\n\nclass ConditionalRendering extends Component{\n\n    constructor() {\n        super()\n        this.state = {\n            todos: todoItemData\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(id) {\n\n        console.log('handle change method called')\n        const updatedTodos = prevState.todos.map(todo => {\n\n            console.log('todo.id: ' + todo.id + ' id: ' + id)\n            if(todo.id === id) {\n                todo.completed = !todo.completed\n                console.log('id: ' + id + ' completed: ' + todo.completed)\n            }\n            return todo\n        })\n        this.setState({\n            todos: updatedTodos\n        }, () => console.log('state: ' + JSON.stringify(this.state.todos)))\n    }\n\n\n    render() {\n        const todoData = this.state.todos.map(d => <TodoItem\n            key = {d.id}\n            data = {d}\n            handleChange = {this.handleChange}/>)\n        return (\n            <div className=\"todo-list\">\n                {todoData}\n            </div>\n        );\n    }\n}\n\nexport default ConditionalRendering"]},"metadata":{},"sourceType":"module"}