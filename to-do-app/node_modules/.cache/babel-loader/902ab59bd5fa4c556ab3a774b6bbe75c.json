{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bishwa/Documents/Projects/react-projects/to-do-app/todo-app-react/to-do-app/src/component/ConditionalRenderingPractice.js\";\nimport React, { Component } from \"react\";\n\nclass ConditionalRenderingPractice extends Component {\n  constructor() {\n    super();\n    this.state = {\n      logInInfo: \"You're logged out\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => {\n      let logInInfo = \"You're logged out\";\n      if (prevState.logInInfo === \"You're logged out\") logInInfo = \"You're logged in\";\n      return {\n        logInInfo: logInInfo\n      };\n    }, () => console.log(\"State updated successfully\"));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.logInInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: this.state.logInInfo === \"You're logged out\" ? \"Login\" : \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ConditionalRenderingPractice;","map":{"version":3,"sources":["/Users/bishwa/Documents/Projects/react-projects/to-do-app/todo-app-react/to-do-app/src/component/ConditionalRenderingPractice.js"],"names":["React","Component","ConditionalRenderingPractice","constructor","state","logInInfo","handleClick","bind","setState","prevState","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,4BAAN,SAA2CD,SAA3C,CAAoD;AAEhDE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,GAAG;AAEV,SAAKE,QAAL,CAAcC,SAAS,IAAI;AAEvB,UAAIJ,SAAS,GAAG,mBAAhB;AACA,UAAGI,SAAS,CAACJ,SAAV,KAAwB,mBAA3B,EACIA,SAAS,GAAG,kBAAZ;AACJ,aAAO;AACHA,QAAAA,SAAS,EAAEA;AADR,OAAP;AAGH,KARD,EAQG,MAAMK,OAAO,CAACC,GAAR,CAAY,4BAAZ,CART;AASH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,kBACK,KAAKR,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA,kBACK,KAAKF,KAAL,CAAWC,SAAX,KAAyB,mBAAzB,GAA+C,OAA/C,GAAyD;AAD9D;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAlC+C;;AAqCpD,eAAeH,4BAAf","sourcesContent":["import React, {Component} from \"react\"\n\nclass ConditionalRenderingPractice extends Component{\n\n    constructor() {\n        super()\n        this.state = {\n            logInInfo: \"You're logged out\"\n        }\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick() {\n\n        this.setState(prevState => {\n\n            let logInInfo = \"You're logged out\"\n            if(prevState.logInInfo === \"You're logged out\")\n                logInInfo = \"You're logged in\"\n            return {\n                logInInfo: logInInfo\n            }\n        }, () => console.log(\"State updated successfully\"))\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>\n                    {this.state.logInInfo}\n                </h1>\n                <button onClick={this.handleClick}>\n                    {this.state.logInInfo === \"You're logged out\" ? \"Login\" : \"Logout\"}\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default ConditionalRenderingPractice"]},"metadata":{},"sourceType":"module"}